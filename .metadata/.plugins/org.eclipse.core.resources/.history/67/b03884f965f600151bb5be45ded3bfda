package GUI;

import java.awt.BorderLayout;
import java.awt.Desktop;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.border.Border;
import javax.swing.text.PlainDocument;

import org.apache.pdfbox.io.RandomAccessFile;
import org.apache.pdfbox.pdfparser.PDFParser;
import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.pdmodel.PDPage;
import org.apache.pdfbox.rendering.PDFRenderer;

import service.Parse;

class ViewPanel extends JPanel {
	private List<BufferedImage> images;
	private int imageWidth;
	private int imageHeight;

    public ViewPanel() {
    	setPreferredSize(new Dimension(1000, 800));
    }
    
    public void draw(String path) throws Exception {
		images = Parse.GetPdfComponents(path);
		if (images.size() > 0) {
			imageWidth = images.get(0).getWidth();
			imageHeight = images.get(0).getHeight();
			setPreferredSize(new Dimension(imageWidth, imageHeight * images.size()));
		}
    }

	public void reset() {
		images = new ArrayList<BufferedImage>();
	    repaint();
	}
	
	@Override
    protected void paintComponent(Graphics g) {
        if (images != null && images.size() > 0) {
        	super.paintComponent(g);
            for (int index=0; index<images.size(); index++) {
            	g.drawImage(images.get(index), 0, index * imageHeight, null);
            }        	
        }
    }
}
