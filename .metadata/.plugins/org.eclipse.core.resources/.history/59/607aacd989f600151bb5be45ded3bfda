package GUI;

import java.awt.BorderLayout;
import java.awt.Desktop;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;

public class ReaderPanel extends JFrame implements ActionListener {
    private JButton openLocalFileBtn;
    private JButton openUrlFileBtn;
    private JButton exitBtn;
    private JFileChooser fc = new JFileChooser();
    private ViewPanel viewPanel;

    public ReaderPanel() {
        addContent();
        setDisplay();        
    }
     
    /**
     * set display for JFrame
     */
    private void setDisplay() {
        setTitle("Pdf Reader");
        setPreferredSize(new Dimension(1000, 800));
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        pack();
        setLocationRelativeTo(null);
        setVisible(true);
    }
 
    /**
     * add content for JFrame, JFrame contain a ButtonPane (contain buttons) and
     * a JTextArea to show something you work
     * @throws IOException 
     */
    private void addContent() {
        setLayout(new BorderLayout());
        add(createButtonPanel(), BorderLayout.PAGE_START);
        viewPanel = new ViewPanel();
		add(new JScrollPane(viewPanel), BorderLayout.CENTER);
    }
 
    /**
     * create a JPanel contain 3 buttons on TOP of JFrame
     */
    private JPanel createButtonPanel() {
        JPanel panel = new JPanel(new FlowLayout());
        panel.add(openLocalFileBtn = createButton("Open Local File", true));
        panel.add(openUrlFileBtn = createButton("Open Url", true));
        panel.add(exitBtn = createButton("Quit", true));
        return panel;
    }
 
    /**
     * create a JButton with text and icon and add Action for it
     * @param text button text
     * @param enable button enable option
     */
    private JButton createButton(String text, boolean enable) {
        JButton btn = new JButton(text);
        btn.addActionListener(this);
        btn.setEnabled(enable);
        return btn;
    }

    /**
     * handle button click event
     * @param e action event
     */
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == openLocalFileBtn) {
            openFile();
            return;
        } else if (e.getSource() == openUrlFileBtn) {
        	openUrl();
        	return;
        } else if (e.getSource() == exitBtn) {
        	exit();
            return;
        } 
    }

	/**
     * Handle when you open a url
     */
    private void openUrl() {
    	String name = JOptionPane.showInputDialog(this, "What is your name?", null);
    }

	/**
     * Handle when you open a file
     */
    private void openFile() {
        int select = fc.showOpenDialog(this);
        if (select == JFileChooser.APPROVE_OPTION) {
        	try {
        		viewPanel.draw(fc.getSelectedFile().getAbsolutePath());
			} catch (Exception e) {
	        	JOptionPane.showMessageDialog(null, "Input structure is not correct! Please open other one!");
			}
        }
    }

    /**
     * Handle when you click exit button
     */
    private void exit() {
		setVisible(false);
		dispose();
	}
    
	public static void main(String[] args) {
	    new ReaderPanel();
	}
}
